#include <iostream>

/*
//////////////////////////////////////////////////////
// при желании можно использовать комментарии
#define TWO 2
#define OW "sfmxfh\
agsdgm"
// обратная косая черта переносит определение на следующую строку
#define FOUR TWO*TWO 
#define PX printf("X = %d.\n", x) // Не допускать пробелов между  printf и открывающей (
#define FMT "X = %d.\n"
//////////////////////////////////////////////////////
*/

////////////////////////////////////////////////////// Задание 1
#define CHECK(x,y) ((x >= 0)&&(x < y))
#define TASK(x,y) if (CHECK(x,y)) {printf("yes");} else {printf("no");}

////////////////////////////////////////////////////// Задание 2
#define VALUE(n,x,y) *(*((n)+(x))+(y))

////////////////////////////////////////////////////// Задание 3
#define LENARR(a,type) sizeof(a)/sizeof(type);

//////////////////////////////////////////////////////
int main(int args, const char** argv){
	
	/*
	// int x = TWO;
	// PX;
	// x = FOUR;
	// printf(FMT, x);
	// printf("%s\n", OW);
	// printf("TWO: OW\n");
	*/
	
	/* Описание 1 задание
	//////////////////////////////////////////////////////
	// Описать макрокоманду, проверяющую, входит ли переданное ей число в диапазон от нуля (включительно) 
	// до переданного ей второго аргумента (исключительно)
	//////////////////////////////////////////////////////
	*/
	
	{ // 1 задание
		int x, y;
		
		scanf("%d", &x);
		scanf("%d", &y);
		
		TASK(x,y);
	}
	
	/* Описание 2 задания
	//////////////////////////////////////////////////////
	// Описать макрокоманду, получающую доступ к элементу двумерного массива 
	// (организованного динамически) посредством разыменования указателей
	//////////////////////////////////////////////////////
	*/
	
	{
		int arr[5][5] ={
			{55,1,25,33,6},
			{12357,1346,34,65,22},
			{7863,9,8,226,7},
			{1,2,3,4,5},
			{88,23,12,10,44}
		};
		
		printf(" %d ", VALUE(arr,0,0));
	}
	
	/* Описание 3 задания
	//////////////////////////////////////////////////////
	// * Описать макрокоманду, возвращающую количество элементов локального массива, 
	// принимающую на вход ссылку на массив и его тип
	//////////////////////////////////////////////////////
	*/
	
	{
		int f[]={36,346,1,1346,7,134,1,4,135,7,3,71,337,5};
		std::cout << LENARR(f,int);
	}
	
	return 0;
}